{
  "name": "Freedomology Sprint Creator",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "create-sprint",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "create-sprint"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "sprint_theme",
              "value": "={{ $json.body.sprint_theme }}"
            },
            {
              "name": "duration",
              "value": "={{ $json.body.duration }}"
            },
            {
              "name": "teaching_goals",
              "value": "={{ $json.body.teaching_goals }}"
            },
            {
              "name": "email_style",
              "value": "={{ $json.body.email_style }}"
            },
            {
              "name": "participant_emails",
              "value": "={{ $json.body.participant_emails }}"
            },
            {
              "name": "creator_name",
              "value": "={{ $json.body.creator_name }}"
            },
            {
              "name": "creator_email",
              "value": "={{ $json.body.creator_email }}"
            },
            {
              "name": "creator_bio",
              "value": "={{ $json.body.creator_bio }}"
            },
            {
              "name": "personalization_data",
              "value": "={{ $json.body.personalization_data }}"
            },
            {
              "name": "sprint_description",
              "value": "={{ $json.body.sprint_description }}"
            },
            {
              "name": "content_generation",
              "value": "={{ $json.body.content_generation }}"
            }
          ],
          "number": [
            {
              "name": "current_day",
              "value": 1
            }
          ],
          "array": [
            {
              "name": "generated_scripts",
              "value": []
            },
            {
              "name": "email_sequences",
              "value": []
            }
          ]
        },
        "options": {}
      },
      "id": "set-initial-data",
      "name": "Set Initial Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "loop-condition",
              "leftValue": "={{ $json.current_day }}",
              "rightValue": "={{ $json.duration }}",
              "operator": {
                "type": "number",
                "operation": "lte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-loop-condition",
      "name": "Check Loop Condition",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "resource": "chat",
        "operation": "create",
        "model": {
          "__rl": true,
          "value": "gpt-4-turbo-preview",
          "mode": "list"
        },
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "You are an expert personal development coach creating transformational daily content. Generate a complete daily script for Day {{ $json.current_day }} of {{ $json.duration }} for the sprint theme: {{ $json.sprint_theme }}.\n\nTeaching Goals: {{ $json.teaching_goals }}\nCreator: {{ $json.creator_name }} - {{ $json.creator_bio }}\nPersonalization: {{ $json.personalization_data }}\n\nReturn your response as a JSON object with this exact structure:\n{\n  \"day\": {{ $json.current_day }},\n  \"title\": \"Compelling title for Day {{ $json.current_day }}\",\n  \"script\": \"Complete detailed script content here with practical exercises, insights, and actionable steps. Make it engaging and transformational.\",\n  \"key_insight\": \"One powerful takeaway for this day\",\n  \"action_step\": \"Specific action the participant should take\",\n  \"reflection_prompt\": \"Thought-provoking question for journaling\",\n  \"duration_minutes\": 15\n}\n\nMake the script substantial, practical, and perfectly aligned with the overall sprint theme and goals."
            }
          ]
        },
        "options": {
          "temperature": 0.7,
          "maxTokens": 2000
        }
      },
      "id": "generate-daily-script",
      "name": "Generate Daily Script",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.3,
      "position": [900, 180],
      "credentials": {
        "openAiApi": {
          "id": "openai-credentials",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Parse the OpenAI response and add to scripts array\nconst openaiResponse = JSON.parse($input.first().json.message.content);\nconst currentScripts = $('Set Initial Data').first().json.generated_scripts || [];\n\n// Add the new script\ncurrentScripts.push(openaiResponse);\n\n// Increment day counter\nconst nextDay = $('Set Initial Data').first().json.current_day + 1;\n\nreturn {\n  json: {\n    ...$(\"Set Initial Data\").first().json,\n    current_day: nextDay,\n    generated_scripts: currentScripts,\n    latest_script: openaiResponse\n  }\n};"
      },
      "id": "process-script-response",
      "name": "Process Script Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 180]
    },
    {
      "parameters": {
        "resource": "chat",
        "operation": "create",
        "model": {
          "__rl": true,
          "value": "gpt-4-turbo-preview",
          "mode": "list"
        },
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "Generate an email sequence for Day {{ $json.latest_script.day }} of the {{ $json.sprint_theme }} sprint.\n\nEmail Style: {{ $json.email_style }}\nCreator: {{ $json.creator_name }}\nDaily Content: {{ $json.latest_script.title }} - {{ $json.latest_script.key_insight }}\n\nCreate 3 emails for this day:\n1. Pre-lesson reminder (sent morning of)\n2. Lesson delivery (contains the main content) \n3. Follow-up encouragement (sent evening)\n\nReturn as JSON:\n{\n  \"day\": {{ $json.latest_script.day }},\n  \"emails\": [\n    {\n      \"type\": \"reminder\",\n      \"subject\": \"Subject line\",\n      \"content\": \"Email content\",\n      \"send_time\": \"09:00\"\n    },\n    {\n      \"type\": \"lesson\",\n      \"subject\": \"Subject line\", \n      \"content\": \"Email content with lesson\",\n      \"send_time\": \"12:00\"\n    },\n    {\n      \"type\": \"followup\",\n      \"subject\": \"Subject line\",\n      \"content\": \"Email content\",\n      \"send_time\": \"18:00\"\n    }\n  ]\n}"
            }
          ]
        },
        "options": {
          "temperature": 0.7,
          "maxTokens": 1500
        }
      },
      "id": "generate-email-sequence",
      "name": "Generate Email Sequence",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.3,
      "position": [1340, 180],
      "credentials": {
        "openAiApi": {
          "id": "openai-credentials",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Parse email response and add to sequences\nconst emailResponse = JSON.parse($input.first().json.message.content);\nconst currentSequences = $('Process Script Response').first().json.email_sequences || [];\n\n// Add the new email sequence\ncurrentSequences.push(emailResponse);\n\nreturn {\n  json: {\n    ...$('Process Script Response').first().json,\n    email_sequences: currentSequences\n  }\n};"
      },
      "id": "process-email-response",
      "name": "Process Email Response", 
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1560, 180]
    },
    {
      "parameters": {
        "amount": 2,
        "unit": "seconds"
      },
      "id": "rate-limit-delay",
      "name": "Rate Limit Delay",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [1780, 180]
    },
    {
      "parameters": {
        "jsCode": "// Generate final sprint package\nconst sprintData = $input.first().json;\n\n// Create participant email list\nconst participantEmails = sprintData.participant_emails \n  ? sprintData.participant_emails.split(',').map(email => email.trim()).filter(email => email)\n  : [];\n\n// Create final package\nconst finalPackage = {\n  sprint_id: `sprint_${Date.now()}`,\n  metadata: {\n    theme: sprintData.sprint_theme,\n    duration: sprintData.duration,\n    creator: sprintData.creator_name,\n    creator_email: sprintData.creator_email,\n    creator_bio: sprintData.creator_bio,\n    teaching_goals: sprintData.teaching_goals,\n    description: sprintData.sprint_description,\n    created_at: new Date().toISOString(),\n    total_scripts: sprintData.generated_scripts.length,\n    total_emails: sprintData.email_sequences.length\n  },\n  scripts: sprintData.generated_scripts,\n  email_sequences: sprintData.email_sequences,\n  participants: participantEmails,\n  status: 'generated',\n  generation_complete: true\n};\n\nreturn {\n  json: finalPackage\n};"
      },
      "id": "create-final-package",
      "name": "Create Final Package",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 420]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {}
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook", 
      "typeVersion": 1.1,
      "position": [1120, 420]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "generation-complete",
              "leftValue": "={{ $json.content_generation }}",
              "rightValue": "ai",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-content-generation",
      "name": "Check Content Generation",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 420]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Set Initial Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Initial Data": {
      "main": [
        [
          {
            "node": "Check Content Generation",
            "type": "main", 
            "index": 0
          }
        ]
      ]
    },
    "Check Content Generation": {
      "main": [
        [
          {
            "node": "Check Loop Condition",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Final Package",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Loop Condition": {
      "main": [
        [
          {
            "node": "Generate Daily Script",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Final Package", 
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Daily Script": {
      "main": [
        [
          {
            "node": "Process Script Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Script Response": {
      "main": [
        [
          {
            "node": "Generate Email Sequence",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Email Sequence": {
      "main": [
        [
          {
            "node": "Process Email Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Email Response": {
      "main": [
        [
          {
            "node": "Rate Limit Delay",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rate Limit Delay": {
      "main": [
        [
          {
            "node": "Check Loop Condition",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Final Package": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-01-24T00:00:00.000Z",
  "versionId": "1"
}